{"ast":null,"code":"var _jsxFileName = \"/Users/marktiddy/Developer/personal-projects/slam-dunk-day-planner/src/DayPlan.jsx\";\nimport moment from \"moment\";\nimport React, { useEffect } from \"react\";\nimport { stagecols } from \"./bands\";\nimport html2canvas from \"html2canvas\";\nimport { bands as defaultBands } from \"./bands\";\n\nconst DayPlan = ({\n  bands,\n  setBands,\n  setSite,\n  site,\n  setStep\n}) => {\n  //Needs to order bands by time\n  //Show clashes\n  //Allow option to start again\n  //Allow option to save as image\n  const minutesOfDate = time => {\n    const splitTime = time.split(\":\");\n    const minutes = parseInt(splitTime[0] * 60) + parseInt(splitTime[1]);\n    return minutes;\n  };\n\n  const sortedBands = bands.sort((a, b) => minutesOfDate(a.start) - minutesOfDate(b.start));\n  useEffect(() => {\n    localStorage.setItem(\"slamDunkBands\", JSON.stringify(sortedBands));\n    localStorage.setItem(\"slamDunkSite\", site);\n  }, [sortedBands, site]);\n\n  const createDownload = () => {\n    html2canvas(document.getElementById(\"dayplan\")).then(canvas => {\n      const image = canvas.toDataURL().replace(\"image/png\", \"image/octet-stream\");\n      const a = document.createElement(\"a\");\n      a.href = image;\n      a.download = \"dayplan.png\";\n      a.click();\n    });\n  };\n\n  const reset = () => {\n    localStorage.removeItem(\"slamDunkBands\");\n    setBands(defaultBands);\n    setSite();\n    setStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-red-600 font-extrabold my-2 text-center capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Here's your day plan for Slam Dunk \", site), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-xs text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Your personalised plan has saved to your browser so it'll be here when you revisit. Don't forget to bookmark this site or add it to your homescreen\"), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => createDownload(),\n    className: \"bg-red-600 text-white rounded m-auto py-1 px-2 text-xs inline-block font-extrabold text-center mt-2 cursor-pointer transition-all hover:opacity-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Save Day Plan\"), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => reset(),\n    className: \"bg-yellow-400 text-black rounded m-auto py-1 px-2 text-xs inline-block font-extrabold text-center mt-2 ml-2 cursor-pointer transition-all hover:opacity-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Start Again\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"dayplan\",\n    className: \"p-1 grid grid-cols-1 md:grid-cols-2 gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, sortedBands.map((b, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${stagecols.background[b.stage]} rounded w-full my-4 text-center shadow-xl`,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: `${stagecols.text[b.stage]} font-extrabold uppercase text-xl mb-1 px-2 pt-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, b.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: `${stagecols.text[b.stage]} text-lg font-light px-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, b.stage), /*#__PURE__*/React.createElement(\"p\", {\n      className: `${stagecols.text[b.stage]} font-extrabold uppercase text-sm mb-1 px-2 pb-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Starts: \", b.start, \" (\", moment(\"08/04/2021 \" + b.start).format(\"h:mm a\"), \") \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 69\n      }\n    }), \"Ends: \", b.end, \" (\", moment(\"08/04/2021 \" + b.end).format(\"h:mm a\"), \")\"), i < bands.length - 1 && minutesOfDate(b.end) > minutesOfDate(bands[i + 1].start) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-full bg-yellow-400 text-black p-2 text-xs font-extrabold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, \"CLASH ALERT\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), \"The end of this set is after your next band starts\"));\n  })));\n};\n\nexport default DayPlan;","map":{"version":3,"sources":["/Users/marktiddy/Developer/personal-projects/slam-dunk-day-planner/src/DayPlan.jsx"],"names":["moment","React","useEffect","stagecols","html2canvas","bands","defaultBands","DayPlan","setBands","setSite","site","setStep","minutesOfDate","time","splitTime","split","minutes","parseInt","sortedBands","sort","a","b","start","localStorage","setItem","JSON","stringify","createDownload","document","getElementById","then","canvas","image","toDataURL","replace","createElement","href","download","click","reset","removeItem","map","i","background","stage","text","name","format","end","length"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport React, { useEffect } from \"react\";\nimport { stagecols } from \"./bands\";\nimport html2canvas from \"html2canvas\";\nimport { bands as defaultBands } from \"./bands\";\n\nconst DayPlan = ({ bands, setBands, setSite, site, setStep }) => {\n  //Needs to order bands by time\n  //Show clashes\n  //Allow option to start again\n  //Allow option to save as image\n  const minutesOfDate = (time) => {\n    const splitTime = time.split(\":\");\n    const minutes = parseInt(splitTime[0] * 60) + parseInt(splitTime[1]);\n    return minutes;\n  };\n\n  const sortedBands = bands.sort(\n    (a, b) => minutesOfDate(a.start) - minutesOfDate(b.start)\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"slamDunkBands\", JSON.stringify(sortedBands));\n    localStorage.setItem(\"slamDunkSite\", site);\n  }, [sortedBands, site]);\n\n  const createDownload = () => {\n    html2canvas(document.getElementById(\"dayplan\")).then((canvas) => {\n      const image = canvas\n        .toDataURL()\n        .replace(\"image/png\", \"image/octet-stream\");\n      const a = document.createElement(\"a\");\n      a.href = image;\n      a.download = \"dayplan.png\";\n      a.click();\n    });\n  };\n\n  const reset = () => {\n    localStorage.removeItem(\"slamDunkBands\");\n    setBands(defaultBands);\n    setSite();\n    setStep(0);\n  };\n\n  return (\n    <div className=\"w-full text-center\">\n      <h2 className=\"text-red-600 font-extrabold my-2 text-center capitalize\">\n        Here's your day plan for Slam Dunk {site}\n      </h2>\n      <p className=\"text-xs text-center\">\n        Your personalised plan has saved to your browser so it'll be here when\n        you revisit. Don't forget to bookmark this site or add it to your\n        homescreen\n      </p>\n      <p\n        onClick={() => createDownload()}\n        className=\"bg-red-600 text-white rounded m-auto py-1 px-2 text-xs inline-block font-extrabold text-center mt-2 cursor-pointer transition-all hover:opacity-75\"\n      >\n        Save Day Plan\n      </p>\n      <p\n        onClick={() => reset()}\n        className=\"bg-yellow-400 text-black rounded m-auto py-1 px-2 text-xs inline-block font-extrabold text-center mt-2 ml-2 cursor-pointer transition-all hover:opacity-75\"\n      >\n        Start Again\n      </p>\n      <div id=\"dayplan\" className=\"p-1 grid grid-cols-1 md:grid-cols-2 gap-2\">\n        {sortedBands.map((b, i) => {\n          return (\n            <div\n              className={`${\n                stagecols.background[b.stage]\n              } rounded w-full my-4 text-center shadow-xl`}\n              key={i}\n            >\n              <p\n                className={`${\n                  stagecols.text[b.stage]\n                } font-extrabold uppercase text-xl mb-1 px-2 pt-2`}\n              >\n                {b.name}\n              </p>\n              <p\n                className={`${stagecols.text[b.stage]} text-lg font-light px-2`}\n              >\n                {b.stage}\n              </p>\n              <p\n                className={`${\n                  stagecols.text[b.stage]\n                } font-extrabold uppercase text-sm mb-1 px-2 pb-2`}\n              >\n                Starts: {b.start} (\n                {moment(\"08/04/2021 \" + b.start).format(\"h:mm a\")}) <br />\n                Ends: {b.end} ({moment(\"08/04/2021 \" + b.end).format(\"h:mm a\")})\n              </p>\n              {i < bands.length - 1 &&\n                minutesOfDate(b.end) > minutesOfDate(bands[i + 1].start) && (\n                  <div className=\"w-full bg-yellow-400 text-black p-2 text-xs font-extrabold\">\n                    CLASH ALERT\n                    <br />\n                    The end of this set is after your next band starts\n                  </div>\n                )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default DayPlan;\n"]},"metadata":{},"sourceType":"module"}