{"ast":null,"code":"var _jsxFileName = \"/Users/marktiddy/Developer/personal-projects/slam-dunk-day-planner/src/DayPlan.jsx\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { stagecols } from \"./bands\";\n\nconst DayPlan = ({\n  bands,\n  site,\n  setStep\n}) => {\n  //Needs to order bands by time\n  //Show clashes\n  //Allow option to start again\n  //Allow option to save as image\n  const minutesOfDate = time => {\n    const splitTime = time.split(\":\");\n    const minutes = parseInt(splitTime[0] * 60) + parseInt(splitTime[1]);\n    return minutes;\n  };\n\n  const sortedBands = bands.sort((a, b) => {\n    return minutesOfDate(a.start) - minutesOfDate(b.start);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-red-600 font-extrabold my-2 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Here's your day plan\"), sortedBands.map((b, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${stagecols.background[b.stage]} rounded w-full my-4 text-center shadow-xl`,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: `${stagecols.text[b.stage]} font-extrabold uppercase text-xl mb-1 px-2 pt-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, b.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: `${stagecols.text[b.stage]} text-lg font-light px-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, b.stage), /*#__PURE__*/React.createElement(\"p\", {\n      className: `${stagecols.text[b.stage]} font-extrabold uppercase text-sm mb-1 px-2 pb-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Starts: \", b.start, \" (\", moment(\"08/04/2021 \" + b.start).format(\"hh:mma\"), \") \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 67\n      }\n    }), \"Ends: \", b.end, \" (\", moment(\"08/04/2021 \" + b.end).format(\"hh:mma\"), \")\"), i < bands.length - 1 && minutesOfDate(b.end) > minutesOfDate(bands[i + 1].start) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-full bg-yellow-400 text-black p-2 text-sm font-extrabold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"CLASH ALERT\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }), \"The end of this set is after your next band starts\"));\n  }));\n};\n\nexport default DayPlan;","map":{"version":3,"sources":["/Users/marktiddy/Developer/personal-projects/slam-dunk-day-planner/src/DayPlan.jsx"],"names":["moment","React","stagecols","DayPlan","bands","site","setStep","minutesOfDate","time","splitTime","split","minutes","parseInt","sortedBands","sort","a","b","start","map","i","background","stage","text","name","format","end","length"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAC5C;AACA;AACA;AACA;AACA,QAAMC,aAAa,GAAIC,IAAD,IAAU;AAC9B,UAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAlB;AACA,UAAMC,OAAO,GAAGC,QAAQ,CAACH,SAAS,CAAC,CAAD,CAAT,GAAe,EAAhB,CAAR,GAA8BG,QAAQ,CAACH,SAAS,CAAC,CAAD,CAAV,CAAtD;AACA,WAAOE,OAAP;AACD,GAJD;;AAKA,QAAME,WAAW,GAAGT,KAAK,CAACU,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvC,WAAOT,aAAa,CAACQ,CAAC,CAACE,KAAH,CAAb,GAAyBV,aAAa,CAACS,CAAC,CAACC,KAAH,CAA7C;AACD,GAFmB,CAApB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,8CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAIGJ,WAAW,CAACK,GAAZ,CAAgB,CAACF,CAAD,EAAIG,CAAJ,KAAU;AACzB,wBACE;AACE,MAAA,SAAS,EAAG,GACVjB,SAAS,CAACkB,UAAV,CAAqBJ,CAAC,CAACK,KAAvB,CACD,4CAHH;AAIE,MAAA,GAAG,EAAEF,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,SAAS,EAAG,GACVjB,SAAS,CAACoB,IAAV,CAAeN,CAAC,CAACK,KAAjB,CACD,kDAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGL,CAAC,CAACO,IALL,CANF,eAaE;AAAG,MAAA,SAAS,EAAG,GAAErB,SAAS,CAACoB,IAAV,CAAeN,CAAC,CAACK,KAAjB,CAAwB,0BAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,CAAC,CAACK,KADL,CAbF,eAgBE;AACE,MAAA,SAAS,EAAG,GACVnB,SAAS,CAACoB,IAAV,CAAeN,CAAC,CAACK,KAAjB,CACD,kDAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKWL,CAAC,CAACC,KALb,QAMGjB,MAAM,CAAC,gBAAgBgB,CAAC,CAACC,KAAnB,CAAN,CAAgCO,MAAhC,CAAuC,QAAvC,CANH,qBAMsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANtD,YAOSR,CAAC,CAACS,GAPX,QAOkBzB,MAAM,CAAC,gBAAgBgB,CAAC,CAACS,GAAnB,CAAN,CAA8BD,MAA9B,CAAqC,QAArC,CAPlB,MAhBF,EAyBGL,CAAC,GAAGf,KAAK,CAACsB,MAAN,GAAe,CAAnB,IACCnB,aAAa,CAACS,CAAC,CAACS,GAAH,CAAb,GAAuBlB,aAAa,CAACH,KAAK,CAACe,CAAC,GAAG,CAAL,CAAL,CAAaF,KAAd,CADrC,iBAEG;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,uDA3BN,CADF;AAoCD,GArCA,CAJH,CADF;AA6CD,CA3DD;;AA4DA,eAAed,OAAf","sourcesContent":["import moment from \"moment\";\nimport React from \"react\";\nimport { stagecols } from \"./bands\";\n\nconst DayPlan = ({ bands, site, setStep }) => {\n  //Needs to order bands by time\n  //Show clashes\n  //Allow option to start again\n  //Allow option to save as image\n  const minutesOfDate = (time) => {\n    const splitTime = time.split(\":\");\n    const minutes = parseInt(splitTime[0] * 60) + parseInt(splitTime[1]);\n    return minutes;\n  };\n  const sortedBands = bands.sort((a, b) => {\n    return minutesOfDate(a.start) - minutesOfDate(b.start);\n  });\n\n  return (\n    <div className=\"w-full\">\n      <h2 className=\"text-red-600 font-extrabold my-2 text-center\">\n        Here's your day plan\n      </h2>\n      {sortedBands.map((b, i) => {\n        return (\n          <div\n            className={`${\n              stagecols.background[b.stage]\n            } rounded w-full my-4 text-center shadow-xl`}\n            key={i}\n          >\n            <p\n              className={`${\n                stagecols.text[b.stage]\n              } font-extrabold uppercase text-xl mb-1 px-2 pt-2`}\n            >\n              {b.name}\n            </p>\n            <p className={`${stagecols.text[b.stage]} text-lg font-light px-2`}>\n              {b.stage}\n            </p>\n            <p\n              className={`${\n                stagecols.text[b.stage]\n              } font-extrabold uppercase text-sm mb-1 px-2 pb-2`}\n            >\n              Starts: {b.start} (\n              {moment(\"08/04/2021 \" + b.start).format(\"hh:mma\")}) <br />\n              Ends: {b.end} ({moment(\"08/04/2021 \" + b.end).format(\"hh:mma\")})\n            </p>\n            {i < bands.length - 1 &&\n              minutesOfDate(b.end) > minutesOfDate(bands[i + 1].start) && (\n                <div className=\"w-full bg-yellow-400 text-black p-2 text-sm font-extrabold\">\n                  CLASH ALERT\n                  <br />\n                  The end of this set is after your next band starts\n                </div>\n              )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default DayPlan;\n"]},"metadata":{},"sourceType":"module"}